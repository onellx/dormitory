<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jjvu.dormitory.mapper.StudentsAppInfoMapper" >
  <resultMap id="BaseResultMap" type="com.jjvu.dormitory.po.StudentsAppInfo" >
    <id column="STUDENTS_APP_ID" property="studentsAppId" jdbcType="VARCHAR" />
    <result column="STUDENT_EXAM_NUM" property="studentExamNum" jdbcType="VARCHAR" />
    <result column="STUDENT_APP_HEARD" property="studentAppHeard" jdbcType="VARCHAR" />
    <result column="STUDENT_APP_PASSWD" property="studentAppPasswd" jdbcType="VARCHAR" />
    <result column="STUDENT_APP_PHONE" property="studentAppPhone" jdbcType="VARCHAR" />
    <result column="STUDENTS_FACE_CODE" property="studentsFaceCode" jdbcType="VARCHAR" />
    <result column="STUDENTS_APP_STATE" property="studentsAppState" jdbcType="VARCHAR" />
    <result column="APP_CHANGE_TIME" property="appChangeTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STUDENTS_APP_ID, STUDENT_EXAM_NUM, STUDENT_APP_HEARD, STUDENT_APP_PASSWD, STUDENT_APP_PHONE, 
    STUDENTS_FACE_CODE, STUDENTS_APP_STATE, APP_CHANGE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jjvu.dormitory.po.StudentsAppInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students_app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from students_app_info
    where STUDENTS_APP_ID = #{studentsAppId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from students_app_info
    where STUDENTS_APP_ID = #{studentsAppId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jjvu.dormitory.po.StudentsAppInfoExample" >
    delete from students_app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jjvu.dormitory.po.StudentsAppInfo" >
    insert into students_app_info (STUDENTS_APP_ID, STUDENT_EXAM_NUM, STUDENT_APP_HEARD, 
      STUDENT_APP_PASSWD, STUDENT_APP_PHONE, STUDENTS_FACE_CODE, 
      STUDENTS_APP_STATE, APP_CHANGE_TIME)
    values (#{studentsAppId,jdbcType=VARCHAR}, #{studentExamNum,jdbcType=VARCHAR}, #{studentAppHeard,jdbcType=VARCHAR}, 
      #{studentAppPasswd,jdbcType=VARCHAR}, #{studentAppPhone,jdbcType=VARCHAR}, #{studentsFaceCode,jdbcType=VARCHAR}, 
      #{studentsAppState,jdbcType=VARCHAR}, #{appChangeTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jjvu.dormitory.po.StudentsAppInfo" >
    insert into students_app_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentsAppId != null" >
        STUDENTS_APP_ID,
      </if>
      <if test="studentExamNum != null" >
        STUDENT_EXAM_NUM,
      </if>
      <if test="studentAppHeard != null" >
        STUDENT_APP_HEARD,
      </if>
      <if test="studentAppPasswd != null" >
        STUDENT_APP_PASSWD,
      </if>
      <if test="studentAppPhone != null" >
        STUDENT_APP_PHONE,
      </if>
      <if test="studentsFaceCode != null" >
        STUDENTS_FACE_CODE,
      </if>
      <if test="studentsAppState != null" >
        STUDENTS_APP_STATE,
      </if>
      <if test="appChangeTime != null" >
        APP_CHANGE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentsAppId != null" >
        #{studentsAppId,jdbcType=VARCHAR},
      </if>
      <if test="studentExamNum != null" >
        #{studentExamNum,jdbcType=VARCHAR},
      </if>
      <if test="studentAppHeard != null" >
        #{studentAppHeard,jdbcType=VARCHAR},
      </if>
      <if test="studentAppPasswd != null" >
        #{studentAppPasswd,jdbcType=VARCHAR},
      </if>
      <if test="studentAppPhone != null" >
        #{studentAppPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentsFaceCode != null" >
        #{studentsFaceCode,jdbcType=VARCHAR},
      </if>
      <if test="studentsAppState != null" >
        #{studentsAppState,jdbcType=VARCHAR},
      </if>
      <if test="appChangeTime != null" >
        #{appChangeTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jjvu.dormitory.po.StudentsAppInfoExample" resultType="java.lang.Integer" >
    select count(*) from students_app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update students_app_info
    <set >
      <if test="record.studentsAppId != null" >
        STUDENTS_APP_ID = #{record.studentsAppId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentExamNum != null" >
        STUDENT_EXAM_NUM = #{record.studentExamNum,jdbcType=VARCHAR},
      </if>
      <if test="record.studentAppHeard != null" >
        STUDENT_APP_HEARD = #{record.studentAppHeard,jdbcType=VARCHAR},
      </if>
      <if test="record.studentAppPasswd != null" >
        STUDENT_APP_PASSWD = #{record.studentAppPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.studentAppPhone != null" >
        STUDENT_APP_PHONE = #{record.studentAppPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.studentsFaceCode != null" >
        STUDENTS_FACE_CODE = #{record.studentsFaceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.studentsAppState != null" >
        STUDENTS_APP_STATE = #{record.studentsAppState,jdbcType=VARCHAR},
      </if>
      <if test="record.appChangeTime != null" >
        APP_CHANGE_TIME = #{record.appChangeTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update students_app_info
    set STUDENTS_APP_ID = #{record.studentsAppId,jdbcType=VARCHAR},
      STUDENT_EXAM_NUM = #{record.studentExamNum,jdbcType=VARCHAR},
      STUDENT_APP_HEARD = #{record.studentAppHeard,jdbcType=VARCHAR},
      STUDENT_APP_PASSWD = #{record.studentAppPasswd,jdbcType=VARCHAR},
      STUDENT_APP_PHONE = #{record.studentAppPhone,jdbcType=VARCHAR},
      STUDENTS_FACE_CODE = #{record.studentsFaceCode,jdbcType=VARCHAR},
      STUDENTS_APP_STATE = #{record.studentsAppState,jdbcType=VARCHAR},
      APP_CHANGE_TIME = #{record.appChangeTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jjvu.dormitory.po.StudentsAppInfo" >
    update students_app_info
    <set >
      <if test="studentExamNum != null" >
        STUDENT_EXAM_NUM = #{studentExamNum,jdbcType=VARCHAR},
      </if>
      <if test="studentAppHeard != null" >
        STUDENT_APP_HEARD = #{studentAppHeard,jdbcType=VARCHAR},
      </if>
      <if test="studentAppPasswd != null" >
        STUDENT_APP_PASSWD = #{studentAppPasswd,jdbcType=VARCHAR},
      </if>
      <if test="studentAppPhone != null" >
        STUDENT_APP_PHONE = #{studentAppPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentsFaceCode != null" >
        STUDENTS_FACE_CODE = #{studentsFaceCode,jdbcType=VARCHAR},
      </if>
      <if test="studentsAppState != null" >
        STUDENTS_APP_STATE = #{studentsAppState,jdbcType=VARCHAR},
      </if>
      <if test="appChangeTime != null" >
        APP_CHANGE_TIME = #{appChangeTime,jdbcType=VARCHAR},
      </if>
    </set>
    where STUDENTS_APP_ID = #{studentsAppId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jjvu.dormitory.po.StudentsAppInfo" >
    update students_app_info
    set STUDENT_EXAM_NUM = #{studentExamNum,jdbcType=VARCHAR},
      STUDENT_APP_HEARD = #{studentAppHeard,jdbcType=VARCHAR},
      STUDENT_APP_PASSWD = #{studentAppPasswd,jdbcType=VARCHAR},
      STUDENT_APP_PHONE = #{studentAppPhone,jdbcType=VARCHAR},
      STUDENTS_FACE_CODE = #{studentsFaceCode,jdbcType=VARCHAR},
      STUDENTS_APP_STATE = #{studentsAppState,jdbcType=VARCHAR},
      APP_CHANGE_TIME = #{appChangeTime,jdbcType=VARCHAR}
    where STUDENTS_APP_ID = #{studentsAppId,jdbcType=VARCHAR}
  </update>
  <resultMap id="StudentsAppInfoCustom" type="com.jjvu.dormitory.po.StudentsAppInfoCustom">
    <result column="STUDENT_EXAM_NUM" jdbcType="VARCHAR" property="studentExamNum"/>
    <result column="STUDENT_APP_HEARD" jdbcType="VARCHAR" property="studentAppHeard"/>
    <result column="STUDENT_NAME" jdbcType="VARCHAR" property="studentName" />
    <result column="STUDENT_BIRTHDAY" jdbcType="DATE" property="studentBirthday" />
    <result column="STUDENT_IDCARD_TYPE" jdbcType="VARCHAR" property="studentIdcardType"/>
    <result column="STUDENT_IDCARD" jdbcType="VARCHAR" property="studentIdcard"/>
    <result column="STUDENT_SEX" jdbcType="VARCHAR" property="studentSex"/>
    <result column="STUDENT_APP_PHONE" jdbcType="VARCHAR" property="studentAppPhone" />
    <result column="DORM_NAME" jdbcType="VARCHAR" property="dormName" />
    <result column="ROOM_NUM" jdbcType="VARCHAR" property="roomNum" /> 
  </resultMap>
  <select id="selectByStudentsInfoCustom" parameterType="java.lang.String" resultMap="StudentsAppInfoCustom">
	SELECT a.STUDENT_EXAM_NUM,a.STUDENT_APP_HEARD,b.STUDENT_BIRTHDAY,
	b.STUDENT_NAME,b.STUDENT_IDCARD_TYPE,b.STUDENT_IDCARD,b.STUDENT_SEX,
	d.DORM_NAME,c.ROOM_NUM,a.STUDENT_APP_PHONE 
	FROM students_app_info a
	INNER JOIN student_info b ON b.STUDENT_EXAM_NUM=a.STUDENT_EXAM_NUM
	INNER JOIN dormroom_info c ON c.ROOM_ID=b.ROOM_ID
	INNER JOIN dorm_info d ON d.DORM_ID=c.DORM_ID
	WHERE a.STUDENT_EXAM_NUM=#{studentExamNum,jdbcType=VARCHAR}
  </select>
  <select id="selectbyManagerId" parameterType="java.lang.String" resultMap="StudentsAppInfoCustom">
	SELECT d.STUDENT_NAME,c.ROOM_NUM,d.STUDENT_EXAM_NUM from manager a 
	JOIN dorm_info b ON a.MANAGER_ID=b.DORM_MANAGER 
	JOIN dormroom_info c ON c.DORM_ID=b.DORM_ID 
	JOIN student_info d ON d.ROOM_ID=c.ROOM_ID 
	WHERE a.MANAGER_ID=#{managerId,jdbcType=VARCHAR}
  </select>
</mapper>